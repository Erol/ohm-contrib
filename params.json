{"name":"Ohm-contrib","body":"# ohm-contrib\r\n\r\nA collection of drop-in modules for Ohm.\r\n\r\nIf you're upgrading from 0.1.x, see [the changes below](#upgrade)\r\n\r\n## Quick Overview\r\n\r\n```ruby\r\nrequire 'ohm'\r\nrequire 'ohm/contrib'\r\n\r\nclass Post < Ohm::Model\r\n  include Ohm::Timestamps\r\n  include Ohm::DataTypes\r\n\r\n  attribute :amount, Type::Decimal\r\n  attribute :url\r\n  attribute :poster_email\r\n  attribute :slug\r\nend\r\n\r\npost = Post.create\r\n\r\npost.created_at.kind_of?(Time)\r\n# => true\r\n\r\npost.update_at.kind_of?(Time)\r\n# => true\r\n```\r\n\r\nIt's important to note that `created_at` and `update_at` both store\r\ntimes as a unix timestamp for efficiency.\r\n\r\n## Ohm::Callbacks\r\n\r\n**Note:** Macro-style callbacks have been removed in version 1.0.x.\r\nPlease use instance style callbacks.\r\n\r\n```ruby\r\nclass Order < Ohm::Model\r\n  attribute :status\r\n\r\n  def before_create\r\n    self.status = \"pending\"\r\n  end\r\n\r\n  def after_save\r\n    # do something here\r\n  end\r\nend\r\n```\r\n\r\n## Ohm::DataTypes\r\n\r\nIf you don't already know, Ohm 1.0 already supports typecasting out of\r\nthe box by taking a `lambda` parameter. An example best explains:\r\n\r\n```ruby\r\nclass Product < Ohm::Model\r\n  attribute :price, lambda { |x| x.to_f }\r\nend\r\n```\r\n\r\nWhat `Ohm::DataTypes` does is define all of these lambdas for you,\r\nso we don't have to manually define how to cast an Integer, Float,\r\nDecimal, Time, Date, etc.\r\n\r\n### DataTypes: Basic example\r\n\r\n```ruby\r\nclass Product < Ohm::Model\r\n  include Ohm::DataTypes\r\n\r\n  attribute :price, Type::Decimal\r\n  attribute :start_of_sale, Type::Time\r\n  attribute :end_of_sale, Type::Time\r\n  attribute :priority, Type::Integer\r\n  attribute :rating, Type::Float\r\nend\r\n\r\nproduct = Product.create(price: \"127.99\")\r\nproduct.price.kind_of?(BigDecimal)\r\n# => true\r\n\r\nproduct = Product.create(start_of_sale: Time.now.rfc2822)\r\nproduct.start_of_sale.kind_of?(Time)\r\n# => true\r\n\r\nproduct = Product.create(end_of_sale: Time.now.rfc2822)\r\nproduct.end_of_sale.kind_of?(Time)\r\n# => true\r\n\r\nproduct = Product.create(priority: \"100\")\r\nproduct.priority.kind_of?(Integer)\r\n# => true\r\n\r\nproduct = Product.create(rating: \"5.5\")\r\nproduct.rating.kind_of?(Float)\r\n# => true\r\n```\r\n\r\n### DataTypes: Advanced example\r\n\r\n```ruby\r\nclass Product < Ohm::Model\r\n  include Ohm::DataTypes\r\n\r\n  attribute :meta, Type::Hash\r\n  attribute :sizes, Type::Array\r\nend\r\n\r\nproduct = Product.create(meta: { resolution: '1280x768', battery: '8 hours' },\r\n                         sizes: ['XS S M L XL'])\r\n\r\nproduct.meta.kind_of?(Hash)\r\n# => true\r\n\r\nproduct.meta == { resolution: '1280x768', battery: '8 hours' }\r\n# => true\r\n\r\nproduct.meta.kind_of?(Array)\r\n# => true\r\n\r\nproduct.sizes == ['XS S M L XL']\r\n# => true\r\n```\r\n\r\n## Ohm::Slug\r\n\r\n```ruby\r\nclass Post < Ohm::Model\r\n  include Ohm::Slug\r\n\r\n  attribute :title\r\n\r\n  def to_s\r\n    title\r\n  end\r\nend\r\n\r\npost = Post.create(title: \"Using Ohm contrib 1.0\")\r\npost.to_param == \"1-using-ohm-contrib-1.0\"\r\n# => true\r\n```\r\n\r\nBy default, `Ohm::Slug` tries to load iconv in order to transliterate\r\nnon-ascii characters.\r\n\r\n```ruby\r\npost = Post.create(:title => \"DÃ©cor\")\r\npost.to_param == \"2-decor\"\r\n```\r\n\r\n## Ohm::Versioned\r\n\r\nFor cases where you expect people to be editing long pieces of\r\ncontent concurrently (the most obvious example would be a CMS with multiple\r\nmoderators), then you need to put some kind of versioning in place.\r\n\r\n```ruby\r\nclass Article < Ohm::Model\r\n  include Ohm::Versioned\r\n\r\n  attribute :title\r\n  attribute :content\r\nend\r\n\r\na1 = Article.create(:title => \"Foo Bar\", :content => \"Lorem ipsum\")\r\na2 = Article[a1.id]\r\n\r\n# At this point, a2 will be stale.\r\na1.update(title: \"Foo Bar Baz\")\r\n\r\nbegin\r\n  a2.update(:title => \"Bar Baz\")\r\nrescue Ohm::VersionConflict => ex\r\n  ex.attributes == { :title => \"Bar Baz\", :_version => \"1\", :content => \"Lorem ipsum\" }\r\n  # => true\r\nend\r\n```\r\n\r\n<a name=\"upgrade\" id=\"upgrade\"></a>\r\n\r\n## Important Upgrade notes from 0.1.x\r\n\r\nThe following lists the major changes:\r\n\r\n1. `Ohm::Typecast` has been removed in favor of `Ohm::DatTypes`.\r\n2. `Ohm::Timestamping` has been renamed to `Ohm::Timestamps`.\r\n3. `Ohm::Timestamps` now store times as a UNIX Timestamp.\r\n4. `All Ohm validation related plugins have been removed.\r\n    See [scrivener][scrivener] instead.\r\n5. `Ohm::Boundaries` has been removed.\r\n6. Ohm::Contrib no longer uses `autoload`. You can either\r\n   `require 'ohm/contrib', which requires everything, or you\r\n   can `require ohm/datatypes` for example if you want to cherry\r\n   pick your requires.\r\n7. `Ohm::Callbacks` no longer provides macro style callbacks, i.e.\r\n   `after :create, :do_something`. Use instance callbacks instead.\r\n\r\n[scrivener]: http://github.com/soveran/scrivener","tagline":"A collection of decoupled drop-in modules for Ohm","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}